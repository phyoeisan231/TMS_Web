{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class DriverService {\n  constructor(http) {\n    this.http = http;\n  }\n  getDriverList() {\n    return this.http.get(environment.url + 'Master/GetDriverList');\n  }\n  // deleteDriver(id:any){\n  //   return this.http.delete<any>(environment.url+'Master/DeleteDriver/'+id,httpOptions);\n  // }   \n  deleteDriver(id) {\n    const encodedId = encodeURIComponent(id); // Encode the ID\n    return this.http.delete(`${environment.url}Master/DeleteDriver/${encodedId}`, httpOptions);\n  }\n  static {\n    this.ɵfac = function DriverService_Factory(t) {\n      return new (t || DriverService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DriverService,\n      factory: DriverService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","environment","httpOptions","headers","DriverService","constructor","http","getDriverList","get","url","deleteDriver","id","encodedId","encodeURIComponent","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\poe\\RGL_TMS\\TMS_Web\\TMS_Web\\src\\app\\master\\components\\driver\\driver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpHeaders,HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nconst httpOptions={\r\n  headers:new HttpHeaders({'Content-Type':'application/json'}),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DriverService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  \r\n  getDriverList(){\r\n    return this.http.get<any>(environment.url+'Master/GetDriverList');\r\n  }\r\n  \r\n  // deleteDriver(id:any){\r\n  //   return this.http.delete<any>(environment.url+'Master/DeleteDriver/'+id,httpOptions);\r\n  // }   \r\n  deleteDriver(id: any) {\r\n    const encodedId = encodeURIComponent(id); // Encode the ID\r\n    return this.http.delete<any>(`${environment.url}Master/DeleteDriver/${encodedId}`,httpOptions);\r\n  }\r\n  \r\n\r\n}\r\n"],"mappings":"AACA,SAASA,WAAW,QAAmB,sBAAsB;AAC7D,SAASC,WAAW,QAAQ,8BAA8B;;;AAC1D,MAAMC,WAAW,GAAC;EAChBC,OAAO,EAAC,IAAIH,WAAW,CAAC;IAAC,cAAc,EAAC;EAAkB,CAAC;CAC5D;AAKD,OAAM,MAAOI,aAAa;EAExBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAMP,WAAW,CAACQ,GAAG,GAAC,sBAAsB,CAAC;EACnE;EAEA;EACA;EACA;EACAC,YAAYA,CAACC,EAAO;IAClB,MAAMC,SAAS,GAAGC,kBAAkB,CAACF,EAAE,CAAC,CAAC,CAAC;IAC1C,OAAO,IAAI,CAACL,IAAI,CAACQ,MAAM,CAAM,GAAGb,WAAW,CAACQ,GAAG,uBAAuBG,SAAS,EAAE,EAACV,WAAW,CAAC;EAChG;;;uBAdWE,aAAa,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbd,aAAa;MAAAe,OAAA,EAAbf,aAAa,CAAAgB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}