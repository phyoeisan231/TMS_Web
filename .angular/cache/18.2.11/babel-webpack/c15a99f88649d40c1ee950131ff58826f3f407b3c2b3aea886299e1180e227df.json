{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class TrailerDetailService {\n  constructor(Injector, http) {\n    this.Injector = Injector;\n    this.http = http;\n  }\n  createTrailer(data) {\n    return this.http.post(environment.url + 'Master/SaveTrailer/', data, {\n      reportProgress: true\n    });\n  }\n  getTransporterList(active, isBlack) {\n    const params = new HttpParams().set('active', active).set('isBlack', isBlack);\n    return this.http.get(`${environment.url}Master/GetTransporterList`, {\n      params\n    });\n  }\n  getDriverList(active, isBlack) {\n    const params = new HttpParams().set('active', active).set('isBlack', isBlack);\n    return this.http.get(environment.url + 'Master/GetDriverList', {\n      params\n    });\n  }\n  getTrailerId(id) {\n    return this.http.get(environment.url + 'Master/GetTrailerId/?id=' + id);\n  }\n  updateTrailer(data) {\n    return this.http.put(environment.url + 'Master/UpdateTrailer', data, {\n      reportProgress: true\n    });\n  }\n  static {\n    this.ɵfac = function TrailerDetailService_Factory(t) {\n      return new (t || TrailerDetailService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TrailerDetailService,\n      factory: TrailerDetailService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","HttpParams","environment","httpOptions","headers","TrailerDetailService","constructor","Injector","http","createTrailer","data","post","url","reportProgress","getTransporterList","active","isBlack","params","set","get","getDriverList","getTrailerId","id","updateTrailer","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\poe\\RGL_TMS\\TMS_Web\\TMS_Web\\src\\app\\master\\components\\trailer-detail\\trailer-detail.service.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient,HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable, map } from 'rxjs';\r\n\r\nconst httpOptions={\r\nheaders:new HttpHeaders({'Content-Type':'application/json'}),\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrailerDetailService {\r\n\r\n  constructor(private Injector:Injector,private http:HttpClient) {}\r\n\r\n  createTrailer(data:any){\r\n    return this.http.post<any>(environment.url+'Master/SaveTrailer/',data,{\r\n      reportProgress:true,\r\n    });\r\n  }\r\n\r\n  getTransporterList(active: string, isBlack: string) {\r\n    const params = new HttpParams()\r\n      .set('active', active)\r\n      .set('isBlack', isBlack);\r\n    return this.http.get<any>(`${environment.url}Master/GetTransporterList`, { params });\r\n  }\r\n\r\n  getDriverList(active: string, isBlack: string): Observable<any[]> {\r\n    const params = new HttpParams()\r\n      .set('active', active)\r\n      .set('isBlack', isBlack);\r\n    return this.http.get<any[]>(environment.url+'Master/GetDriverList', { params });\r\n  }\r\n  \r\n  getTrailerId(id:any){\r\n    return this.http.get<any>(environment.url+'Master/GetTrailerId/?id='+id);\r\n  }\r\n\r\n  updateTrailer(data:any){\r\n    return this.http.put<any>(environment.url+'Master/UpdateTrailer',data,{\r\n      reportProgress:true,\r\n    });\r\n  }\r\n  \r\n}\r\n"],"mappings":"AACA,SAAoBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AACzE,SAASC,WAAW,QAAQ,8BAA8B;;;AAG1D,MAAMC,WAAW,GAAC;EAClBC,OAAO,EAAC,IAAIJ,WAAW,CAAC;IAAC,cAAc,EAAC;EAAkB,CAAC;CAC1D;AAID,OAAM,MAAOK,oBAAoB;EAE/BC,YAAoBC,QAAiB,EAASC,IAAe;IAAzC,KAAAD,QAAQ,GAARA,QAAQ;IAAkB,KAAAC,IAAI,GAAJA,IAAI;EAAc;EAEhEC,aAAaA,CAACC,IAAQ;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAMT,WAAW,CAACU,GAAG,GAAC,qBAAqB,EAACF,IAAI,EAAC;MACpEG,cAAc,EAAC;KAChB,CAAC;EACJ;EAEAC,kBAAkBA,CAACC,MAAc,EAAEC,OAAe;IAChD,MAAMC,MAAM,GAAG,IAAIhB,UAAU,EAAE,CAC5BiB,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAAC,CACrBG,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAM,GAAGjB,WAAW,CAACU,GAAG,2BAA2B,EAAE;MAAEK;IAAM,CAAE,CAAC;EACtF;EAEAG,aAAaA,CAACL,MAAc,EAAEC,OAAe;IAC3C,MAAMC,MAAM,GAAG,IAAIhB,UAAU,EAAE,CAC5BiB,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAAC,CACrBG,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAQjB,WAAW,CAACU,GAAG,GAAC,sBAAsB,EAAE;MAAEK;IAAM,CAAE,CAAC;EACjF;EAEAI,YAAYA,CAACC,EAAM;IACjB,OAAO,IAAI,CAACd,IAAI,CAACW,GAAG,CAAMjB,WAAW,CAACU,GAAG,GAAC,0BAA0B,GAACU,EAAE,CAAC;EAC1E;EAEAC,aAAaA,CAACb,IAAQ;IACpB,OAAO,IAAI,CAACF,IAAI,CAACgB,GAAG,CAAMtB,WAAW,CAACU,GAAG,GAAC,sBAAsB,EAACF,IAAI,EAAC;MACpEG,cAAc,EAAC;KAChB,CAAC;EACJ;;;uBAhCWR,oBAAoB,EAAAoB,EAAA,CAAAC,QAAA,CAAAD,EAAA,CAAAlB,QAAA,GAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAApBvB,oBAAoB;MAAAwB,OAAA,EAApBxB,oBAAoB,CAAAyB,IAAA;MAAAC,UAAA,EAFnB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}