{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class TruckService {\n  constructor(http) {\n    this.http = http;\n  }\n  getTruckList() {\n    return this.http.get(environment.url + 'Master/GetTruckList');\n  }\n  onBlackForm(data) {\n    return this.http.put(environment.url + 'Master/BlackFormForTruck/', data, httpOptions);\n  }\n  deleteTruck(id) {\n    return this.http.delete(environment.url + 'Master/DeleteTruck/' + id, httpOptions);\n  }\n  static {\n    this.ɵfac = function TruckService_Factory(t) {\n      return new (t || TruckService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TruckService,\n      factory: TruckService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","environment","httpOptions","headers","TruckService","constructor","http","getTruckList","get","url","onBlackForm","data","put","deleteTruck","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\poe\\RGL_TMS\\TMS_Web\\TMS_Web\\src\\app\\master\\components\\truck\\truck.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpHeaders,HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst httpOptions={\r\n  headers:new HttpHeaders({'Content-Type':'application/json'}),\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TruckService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  \r\n  getTruckList(){\r\n    return this.http.get<any>(environment.url+'Master/GetTruckList');\r\n  }\r\n  \r\n  onBlackForm(data: any) {\r\n    return this.http.put<any>(environment.url + 'Master/BlackFormForTruck/', data, httpOptions);\r\n  }\r\n\r\n  deleteTruck(id:any){\r\n    return this.http.delete<any>(environment.url+'Master/DeleteTruck/'+id,httpOptions);\r\n  }\r\n   \r\n}\r\n"],"mappings":"AACA,SAASA,WAAW,QAAmB,sBAAsB;AAC7D,SAASC,WAAW,QAAQ,8BAA8B;;;AAE1D,MAAMC,WAAW,GAAC;EAChBC,OAAO,EAAC,IAAIH,WAAW,CAAC;IAAC,cAAc,EAAC;EAAkB,CAAC;CAC5D;AAID,OAAM,MAAOI,YAAY;EAEvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAMP,WAAW,CAACQ,GAAG,GAAC,qBAAqB,CAAC;EAClE;EAEAC,WAAWA,CAACC,IAAS;IACnB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAMX,WAAW,CAACQ,GAAG,GAAG,2BAA2B,EAAEE,IAAI,EAAET,WAAW,CAAC;EAC7F;EAEAW,WAAWA,CAACC,EAAM;IAChB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAMd,WAAW,CAACQ,GAAG,GAAC,qBAAqB,GAACK,EAAE,EAACZ,WAAW,CAAC;EACpF;;;uBAdWE,YAAY,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZf,YAAY;MAAAgB,OAAA,EAAZhB,YAAY,CAAAiB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}