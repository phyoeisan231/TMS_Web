{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ProposalService {\n  constructor(http) {\n    this.http = http;\n  }\n  getYardList(active) {\n    return this.http.get(environment.url + 'Master/GetYardList/?active=' + active);\n  }\n  getRailDailyJobList(sDate, jobType, yard) {\n    return this.http.get(environment.url + 'TMSProposal/GetRailDailyJobList/?sDate=' + sDate + '&jobType=' + jobType + '&yard=' + yard);\n  }\n  getCustomerList() {\n    return this.http.get(environment.url + 'TMSProposal/GetCustomerList');\n  }\n  getWHDailyJobList(sDate, jobType) {\n    return this.http.get(environment.url + 'TMSProposal/GetWHDailyJobList/?sDate=' + sDate + '&jobType=' + jobType);\n  }\n  getCCADailyJobList(sDate, jobType) {\n    return this.http.get(environment.url + 'TMSProposal/GetCCADailyJobList/?sDate=' + sDate + '&jobType=' + jobType);\n  }\n  addTMSProposal(data) {\n    console.log(data);\n    return this.http.post(environment.url + 'TMSProposal/CreateTMSProposal', data, httpOptions);\n  }\n  getTransporterList() {\n    return this.http.get(environment.url + 'TMSOperation/GetTransporterDataList');\n  }\n  getGateList(yard) {\n    return this.http.get(environment.url + 'TMSOperation/GetGateInBoundList/?yard=' + yard);\n  }\n  getAreaList(yard) {\n    return this.http.get(environment.url + 'TMSOperation/GetOperationAreaDataList/?yard=' + yard);\n  }\n  getCategoryList(active) {\n    return this.http.get(environment.url + 'Master/GetPCategoryList/?active=' + active);\n  }\n  getCardICDList(yard) {\n    return this.http.get(environment.url + 'TMSOperation/GetCardICDList/?yard=' + yard);\n  }\n  getTruckList(id) {\n    return this.http.get(environment.url + 'TMSOperation/GetTruckList/?id=' + id);\n  }\n  getTrailerList(searchedText) {\n    return this.http.get(environment.url + 'TMSOperation/GetTrailerList/?searchedText=' + searchedText);\n  }\n  getDriverList(id) {\n    return this.http.get(environment.url + 'TMSOperation/GetDriverDataList/?id=' + id);\n  }\n  getInBoundCheckList(startDate, endDate, yard) {\n    return this.http.get(environment.url + 'TMSOperation/GetInBoundCheckList/?startDate=' + startDate + '&endDate=' + endDate + '&yard=' + yard);\n  }\n  createOutBoundCheck(data) {\n    return this.http.post(environment.url + 'TMSOperation/CreateOutBoundCheck', data, httpOptions);\n  }\n  deleteInBoundCheck(id, user) {\n    return this.http.delete(environment.url + 'TMSOperation/DeleteInBoundCheck/?id=' + id + '&user=' + user, httpOptions);\n  }\n  getInBoundCheckById(id) {\n    return this.http.get(environment.url + 'TMSOperation/GetInBoundCheckById/?id=' + id);\n  }\n  updateInBoundCheck(data) {\n    return this.http.put(environment.url + 'TMSOperation/UpdateInBoundCheck', data, httpOptions);\n  }\n  updateInBoundCheckDocument(docList, id, user) {\n    return this.http.put(environment.url + 'TMSOperation/UpdateInBoundCheckDocument/?id=' + id + '&docList=' + docList + '&user=' + user, httpOptions);\n  }\n  deleteInBoundCheckDocument(id, code) {\n    return this.http.delete(environment.url + 'TMSOperation/DeleteInBoundCheckDocument/?id=' + id + '&code=' + code, httpOptions);\n  }\n  static {\n    this.ɵfac = function ProposalService_Factory(t) {\n      return new (t || ProposalService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProposalService,\n      factory: ProposalService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","environment","httpOptions","headers","ProposalService","constructor","http","getYardList","active","get","url","getRailDailyJobList","sDate","jobType","yard","getCustomerList","getWHDailyJobList","getCCADailyJobList","addTMSProposal","data","console","log","post","getTransporterList","getGateList","getAreaList","getCategoryList","getCardICDList","getTruckList","id","getTrailerList","searchedText","getDriverList","getInBoundCheckList","startDate","endDate","createOutBoundCheck","deleteInBoundCheck","user","delete","getInBoundCheckById","updateInBoundCheck","put","updateInBoundCheckDocument","docList","deleteInBoundCheckDocument","code","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\poe\\RGL_TMS\\TMS_Web\\TMS_Web\\src\\app\\tms-operation\\components\\proposal\\proposal.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProposalService {\r\n  constructor (private http: HttpClient) { }\r\n\r\n  getYardList(active: string) {\r\n    return this.http.get<any>(environment.url + 'Master/GetYardList/?active=' + active);\r\n  }\r\n\r\n  getRailDailyJobList(sDate:any,jobType:string,yard:string){\r\n    return this.http.get<any>(environment.url + 'TMSProposal/GetRailDailyJobList/?sDate=' + sDate+ '&jobType=' + jobType+ '&yard='+yard);\r\n  }\r\n\r\n  getCustomerList(){\r\n    return this.http.get<any>(environment.url + 'TMSProposal/GetCustomerList');\r\n\r\n  }\r\n\r\n  getWHDailyJobList(sDate:any,jobType:string){\r\n    return this.http.get<any>(environment.url + 'TMSProposal/GetWHDailyJobList/?sDate=' + sDate+ '&jobType=' + jobType);\r\n  }\r\n\r\n  getCCADailyJobList(sDate:any,jobType:string){\r\n    return this.http.get<any>(environment.url + 'TMSProposal/GetCCADailyJobList/?sDate=' + sDate+ '&jobType=' + jobType);\r\n  }\r\n\r\n  addTMSProposal(data: any) {\r\n    console.log(data)\r\n    return this.http.post<any>(environment.url + 'TMSProposal/CreateTMSProposal', data, httpOptions);\r\n  }\r\n\r\n\r\n\r\n\r\n  getTransporterList() {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetTransporterDataList');\r\n  }\r\n\r\n  getGateList(yard: string) {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetGateInBoundList/?yard=' + yard);\r\n  }\r\n\r\n  getAreaList(yard: string) {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetOperationAreaDataList/?yard=' + yard);\r\n  }\r\n\r\n  getCategoryList(active: string) {\r\n    return this.http.get<any>(environment.url + 'Master/GetPCategoryList/?active=' + active);\r\n  }\r\n\r\n  getCardICDList(yard: string) {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetCardICDList/?yard=' + yard);\r\n  }\r\n\r\n  getTruckList(id: string) {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetTruckList/?id=' + id);\r\n  }\r\n\r\n  getTrailerList(searchedText: string) {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetTrailerList/?searchedText=' + searchedText);\r\n  }\r\n\r\n  getDriverList(id: string) {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetDriverDataList/?id=' + id);\r\n  }\r\n\r\n  getInBoundCheckList(startDate:any,endDate:any,yard:string) {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetInBoundCheckList/?startDate=' + startDate+ '&endDate=' + endDate+ '&yard=' + yard);\r\n  }\r\n\r\n  createOutBoundCheck(data: any) {\r\n    return this.http.post<any>(environment.url + 'TMSOperation/CreateOutBoundCheck', data, httpOptions);\r\n  }\r\n\r\n  deleteInBoundCheck(id: any,user:string) {\r\n    return this.http.delete<any>(environment.url + 'TMSOperation/DeleteInBoundCheck/?id=' + id+ '&user=' + user, httpOptions);\r\n  }\r\n\r\n  getInBoundCheckById(id: string) {\r\n    return this.http.get<any>(environment.url + 'TMSOperation/GetInBoundCheckById/?id=' + id);\r\n  }\r\n\r\n  updateInBoundCheck(data: any) {\r\n    return this.http.put<any>(environment.url + 'TMSOperation/UpdateInBoundCheck', data, httpOptions);\r\n  }\r\n\r\n  updateInBoundCheckDocument(docList:string,id:number,user:string) {\r\n    return this.http.put<any>(environment.url + 'TMSOperation/UpdateInBoundCheckDocument/?id=' + id+ '&docList=' + docList +'&user=' + user, httpOptions);\r\n  }\r\n\r\n  deleteInBoundCheckDocument(id: any,code:string) {\r\n    return this.http.delete<any>(environment.url + 'TMSOperation/DeleteInBoundCheckDocument/?id=' + id+ '&code=' + code, httpOptions);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}