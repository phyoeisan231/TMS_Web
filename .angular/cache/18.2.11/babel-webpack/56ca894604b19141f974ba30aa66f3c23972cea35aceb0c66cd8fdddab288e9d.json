{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class TransporterService {\n  constructor(http) {\n    this.http = http;\n  }\n  getTransporterList(active, isBlack) {\n    const params = new HttpParams().set('active', active).set('isBlack', isBlack);\n    return this.http.get(`${environment.url}Master/GetTransporterList`, {\n      params\n    });\n  }\n  onBlackForm(data) {\n    return this.http.put(environment.url + 'Master/BlackFormForTransporter/', data, httpOptions);\n  }\n  deleteTransporter(id) {\n    return this.http.delete(environment.url + 'Master/DeleteTransporter/' + id, httpOptions);\n  }\n  static {\n    this.ɵfac = function TransporterService_Factory(t) {\n      return new (t || TransporterService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TransporterService,\n      factory: TransporterService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","HttpParams","environment","httpOptions","headers","TransporterService","constructor","http","getTransporterList","active","isBlack","params","set","get","url","onBlackForm","data","put","deleteTransporter","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\poe\\RGL_TMS\\TMS_Web\\TMS_Web\\src\\app\\master\\components\\transporter\\transporter.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpHeaders,HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst httpOptions={\r\n  headers:new HttpHeaders({'Content-Type':'application/json'}),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransporterService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getTransporterList(active: string, isBlack: string) {\r\n    const params = new HttpParams()\r\n      .set('active', active)\r\n      .set('isBlack', isBlack);\r\n    return this.http.get<any>(`${environment.url}Master/GetTransporterList`, { params });\r\n  }\r\n\r\n  onBlackForm(data: any) {\r\n    return this.http.put<any>(environment.url + 'Master/BlackFormForTransporter/', data, httpOptions);\r\n  }\r\n  \r\n  deleteTransporter(id:any){\r\n    return this.http.delete<any>(environment.url+'Master/DeleteTransporter/'+id,httpOptions);\r\n  }\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,WAAW,EAAaC,UAAU,QAAQ,sBAAsB;AACzE,SAASC,WAAW,QAAQ,8BAA8B;;;AAE1D,MAAMC,WAAW,GAAC;EAChBC,OAAO,EAAC,IAAIJ,WAAW,CAAC;IAAC,cAAc,EAAC;EAAkB,CAAC;CAC5D;AAKD,OAAM,MAAOK,kBAAkB;EAE7BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,kBAAkBA,CAACC,MAAc,EAAEC,OAAe;IAChD,MAAMC,MAAM,GAAG,IAAIV,UAAU,EAAE,CAC5BW,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAAC,CACrBG,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;IAC1B,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAM,GAAGX,WAAW,CAACY,GAAG,2BAA2B,EAAE;MAAEH;IAAM,CAAE,CAAC;EACtF;EAEAI,WAAWA,CAACC,IAAS;IACnB,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAMf,WAAW,CAACY,GAAG,GAAG,iCAAiC,EAAEE,IAAI,EAAEb,WAAW,CAAC;EACnG;EAEAe,iBAAiBA,CAACC,EAAM;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAMlB,WAAW,CAACY,GAAG,GAAC,2BAA2B,GAACK,EAAE,EAAChB,WAAW,CAAC;EAC1F;;;uBAjBWE,kBAAkB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlBnB,kBAAkB;MAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}