{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { catchError, of } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport { MasterModule } from '../../master.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"./truck-detail.service\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@syncfusion/ej2-angular-dropdowns\";\nimport * as i8 from \"@syncfusion/ej2-angular-calendars\";\nimport * as i9 from \"@syncfusion/ej2-angular-inputs\";\nimport * as i10 from \"@syncfusion/ej2-angular-buttons\";\nconst _c0 = () => ({\n  text: \"description\",\n  value: \"typeID\"\n});\nconst _c1 = () => ({\n  text: \"transporterName\",\n  value: \"transporterID\"\n});\nfunction TruckDetailComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"New Truck\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TruckDetailComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Edit Truck\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TruckDetailComponent_label_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 22);\n    i0.ɵɵtext(1, \"Vehicle Reg No.:\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TruckDetailComponent_label_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 22);\n    i0.ɵɵtext(1, \"Vehicle Reg No.:\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TruckDetailComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 29);\n    i0.ɵɵtext(2, \"This field is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TruckDetailComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 29);\n    i0.ɵɵtext(2, \"This field is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TruckDetailComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 29);\n    i0.ɵɵtext(2, \"This field is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TruckDetailComponent {\n  constructor(_sanitizer, service, spinner, route, router) {\n    this._sanitizer = _sanitizer;\n    this.service = service;\n    this.spinner = spinner;\n    this.route = route;\n    this.router = router;\n    this.isAdd = true;\n    this.truckTypeList = []; // Array to store truck types\n    this.transporterNames = [];\n    this.formatfilter = 'dd-MMM-yyyy';\n    this.today = new Date();\n    this.loadingTypeList = [\"Bin\", \"Bulk\", \"Containers\", \"Drums\", \"Pallets\", \"Skids\"];\n  }\n  ngOnInit() {\n    this.breadCrumbItems = [{\n      label: 'Truck List',\n      routerLink: '/truck-detail',\n      active: false\n    }, {\n      label: 'Add New Truck',\n      active: true\n    }];\n    this.id = this.route.snapshot.queryParams['id'];\n    this.truckForm = new FormGroup({\n      vehicleRegNo: new FormControl({\n        value: this.id,\n        disabled: !!this.id\n      }, Validators.required),\n      containerType: new FormControl(''),\n      containerSize: new FormControl(''),\n      truckWeight: new FormControl(''),\n      typeID: new FormControl('', Validators.required),\n      transporterID: new FormControl('', Validators.required),\n      active: new FormControl(false),\n      driverLicenseNo: new FormControl(''),\n      lastPassedDate: new FormControl(null),\n      vehicleBackRegNo: new FormControl(''),\n      remarks: new FormControl('')\n      // isBlack:new FormControl(false),\n      // blackReason:new FormControl(''),\n      // blackDate:new FormControl(null),\n      // blackRemovedDate: new FormControl(null),\n      // blackRemovedReason:new FormControl(''),\n      //truckWeight:new FormControl(''),\n      //containerType:new FormControl(''),\n      //containerSize:new FormControl(''),\n      //name:new FormControl(''),\n    });\n    if (this.id != null && this.id != undefined) {\n      this.getTruckById();\n      // this.isAdd=false;\n    }\n    this.service.getTruckTypes('true').subscribe({\n      next: types => {\n        this.truckTypeList = types;\n      },\n      error: error => {\n        console.error('Error loading truck types', error);\n      }\n    });\n    this.service.getTransporterNames().subscribe({\n      next: names => {\n        console.log(\"Transporter Names Loaded:\", names);\n        this.transporterNames = names;\n      },\n      error: error => {\n        console.log('Error Loading Transporter Names', error);\n      }\n    });\n  }\n  // getTruckById() {\n  //   this.spinner.show();\n  //   this.service.getTruckId(this.id)\n  //       .pipe(catchError((err) => {\n  //           this.showError(err); \n  //           return of(null); \n  //       }))\n  //       .subscribe((result) => {\n  //           if (result) {\n  //               this.truckForm.patchValue({\n  //                 vehicleRegNo: result.vehicleRegNo,\n  //                 containerType: result.containerType,\n  //                 containerSize: result.containerSize,\n  //                 truckWeight: result.truckWeight,\n  //                 typeID: result.typeID,\n  //                 transporterID: result.transporterID,\n  //                   driverLicenseNo:result.driverLicenseNo??\"\",\n  //                   active: result.active ?? false,\n  //                   lastPassedDate:result.lastPassedDate?new Date(result.lastPassedDate):null,\n  //                   //name:result.name??\"\",\n  //                   //containerType:result.containerType??\"\",\n  //                   //containerSize:result.containerSize??0,\n  //                   // isBlack: result.isBlack ?? false,\n  //                   // blackDate: result.blackDate ? new Date(result.blackDate) : null,\n  //                   // blackReason: result.blackReason ?? \"\",\n  //                   // blackRemovedDate:result.blackRemovedDate?new Date(result.blackRemovedDate):null,\n  //                   // blackRemovedReason:result.blackRemovedReason??\"\",\n  //               });\n  //               this.breadCrumbItems = [\n  //                   { label: 'Truck List', routerLink: 'master/truck', active: false },\n  //                   { label: 'Edit Truck', active: true }\n  //               ];\n  //               this.isAdd = false; // Set to false since we are editing\n  //           } \n  //           this.spinner.hide();\n  //       });\n  // }\n  getTruckById() {\n    this.spinner.show();\n    this.service.getTruckId(this.id).pipe(catchError(err => of(this.showError(err)))).subscribe(result => {\n      this.truckForm.controls['vehicleRegNo'].setValue(result.vehicleRegNo);\n      this.truckForm.controls['containerType'].setValue(result.containerType);\n      this.truckForm.controls['containerSize'].setValue(result.containerSize);\n      this.truckForm.controls['truckWeight'].setValue(result.truckWeight);\n      this.truckForm.controls['typeID'].setValue(result.typeID);\n      this.truckForm.controls['transporterID'].setValue(result.transporterID);\n      this.truckForm.controls['active'].setValue(result.active);\n      this.truckForm.controls['driverLicenseNo'].setValue(result.driverLicenseNo);\n      this.truckForm.controls['lastPassedDate'].setValue(result.lastPassedDate);\n      this.truckForm.controls['vehicleBackRegNo'].setValue(result.vehicleBackRegNo);\n      this.truckForm.controls['remarks'].setValue(result.remarks);\n      // this.truckForm.controls['isBlack'].setValue(result.isBlack);\n      // this.truckForm.controls['blackDate'].setValue(result.blackDate);\n      // this.truckForm.controls['blackReason'].setValue(result.blackReason);\n      // this.truckForm.controls['blackRemovedDate'].setValue(result.blackRemovedDate);\n      // this.truckForm.controls['blackRemovedReason'].setValue(result.blackRemovedReason);\n      this.isAdd = false;\n      this.breadCrumbItems = [{\n        label: 'Truck',\n        rounterLink: '/truck-detail',\n        active: false\n      }, {\n        label: 'Edit Truck',\n        active: true\n      }];\n      this.spinner.hide();\n    });\n  }\n  saveTruck() {\n    const formData = this.truckForm.value;\n    if (this.isAdd) {\n      formData.createdUser = localStorage.getItem('currentUser');\n      this.addNewTruck(formData);\n    } else {\n      formData.updatedUser = localStorage.getItem('currentUser');\n      this.editTruck(formData);\n    }\n  }\n  navigateToTruck() {\n    this.router.navigate(['master/truck']);\n  }\n  addNewTruck(data) {\n    this.spinner.show();\n    const formData = new FormData();\n    formData.append(\"VehicleRegNo\", data.vehicleRegNo);\n    formData.append(\"ContainerType\", data.containerType);\n    formData.append(\"ContainerSize\", data.containerSize);\n    formData.append(\"TruckWeight\", data.truckWeight);\n    formData.append(\"TypeID\", data.typeID);\n    formData.append(\"TransporterID\", data.transporterID);\n    formData.append(\"Active\", data.active);\n    formData.append(\"DriverLicenseNo\", data.driverLicenseNo);\n    formData.append(\"VehicleBackRegNo\", data.vehicleBackRegNo);\n    formData.append(\"Remarks\", data.remarks);\n    // formData.append(\"IsBlack\",data.isBlack.toString());\n    // formData.append(\"BlackReason\",data.blackReason);\n    // formData.append(\"BlackRemovedReason\",data.blackRemovedReason);\n    //formData.append(\"Name\",data.name);\n    //formData.append(\"ContainerType\",data.containerType);\n    //formData.append(\"ContainerSize\",data.containerSize);\n    // if (data.blackDate) {\n    //   const blackedDate = data.blackDate instanceof Date ? data.blackDate : new Date(data.blackDate);\n    //   const localDate = new Date(blackedDate.getTime() - blackedDate.getTimezoneOffset() * 60000)\n    //     .toISOString()\n    //     .split(\"T\")[0]; // Get only the date portion in 'yyyy-MM-dd' format\n    //   formData.append(\"BlackDate\", localDate);\n    // }\n    // if(data.blackRemovedDate){\n    //   const blackRemoved=data.blackRemovedDate instanceof Date?data.blackRemovedDate:new Date(data.blackRemovedDate);\n    //   const localRemovedDate=new Date(blackRemoved.getTime()-blackRemoved.getTimezoneOffset()*60000)\n    //   .toISOString()\n    //   .split(\"T\")[0];\n    //   formData.append(\"BlackRemovedDate\",localRemovedDate);\n    // }\n    if (data.lastPassedDate) {\n      const lastPass = data.lastPassedDate instanceof Date ? data.lastPassedDate : new Date(data.lastPassedDate);\n      const localLastPassedDate = new Date(lastPass.getTime() - lastPass.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n      formData.append(\"LastPassedDate\", localLastPassedDate);\n    }\n    this.service.createTruck(formData).pipe(catchError(err => of(this.showError(err)))).subscribe(result => {\n      if (result.status == true) {\n        this.spinner.hide();\n        this.showSuccess('Truck added successfully!');\n        this.router.navigate([\"master/truck\"]);\n      } else {\n        this.spinner.hide();\n        Swal.fire('Truck', result.messageContent, 'error');\n      }\n    });\n  }\n  editTruck(data) {\n    this.spinner.show();\n    const formData = new FormData();\n    data.active = data.active ? true : false;\n    formData.append(\"VehicleRegNo\", this.id);\n    formData.append(\"ContainerType\", data.containerType);\n    formData.append(\"ContainerSize\", data.containerSize);\n    formData.append(\"TruckWeight\", data.truckWeight);\n    formData.append(\"TypeID\", data.typeID);\n    formData.append(\"TransporterID\", data.transporterID);\n    formData.append(\"Active\", data.active);\n    formData.append(\"DriverLicenseNo\", data.driverLicenseNo);\n    formData.append(\"VehicleBackRegNo\", data.vehicleBackRegNo);\n    formData.append(\"Remarks\", data.remarks);\n    if (data.lastPassedDate) {\n      const lastPass = data.lastPassedDate instanceof Date ? data.lastPassedDate : new Date(data.lastPassedDate);\n      const localLastPassedDate = new Date(lastPass.getTime() - lastPass.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n      formData.append(\"LastPassedDate\", localLastPassedDate);\n    }\n    this.service.updateTruck(formData).pipe(catchError(err => of(this.showError(err)))).subscribe(result => {\n      this.spinner.hide();\n      if (result.status) {\n        this.showSuccess('Truck updated successfully!');\n        this.router.navigate([\"master/truck\"]);\n      } else {\n        Swal.fire('Truck', result.messageContent, 'error');\n      }\n    });\n  }\n  showSuccess(msg) {\n    Swal.fire('Truck', msg, 'success');\n  }\n  showError(error) {\n    Swal.fire('Truck', error.statusText, 'error');\n  }\n  static #_ = this.ɵfac = function TruckDetailComponent_Factory(t) {\n    return new (t || TruckDetailComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(i2.TruckDetailService), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TruckDetailComponent,\n    selectors: [[\"app-truck-detail\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 68,\n    vars: 17,\n    consts: [[1, \"wrapper\"], [1, \"content-wrapper\"], [1, \"container-fluid\"], [1, \"content\", \"my-0\"], [1, \"row\"], [1, \"card\"], [1, \"card-header\", \"d-flex\", \"align-items-center\", \"justify-content-between\"], [1, \"card-title\", \"mb-0\"], [4, \"ngIf\"], [1, \"button-group\", \"d-flex\"], [1, \"btn\", \"btn-info\", \"btn-sm\", \"me-1\", 3, \"click\", \"disabled\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"row\", \"my-0\"], [\"class\", \"col-md-2 requiredfield\", 4, \"ngIf\"], [1, \"form-group\", \"col-md-4\"], [\"formControlName\", \"vehicleRegNo\", \"tabindex\", \"0\", \"maxlength\", \"50\", 1, \"form-control\", \"form-control-sm\"], [1, \"col-md-2\"], [\"formControlName\", \"vehicleBackRegNo\", \"placeholder\", \"Enter Vehicle BackRegNo\", \"autocomplete\", \"off\", \"tabindex\", \"1\", \"maxlength\", \"100\", 1, \"form-control\", \"form-control-sm\"], [\"formControlName\", \"containerType\", \"placeholder\", \"Enter ContainerType\", \"autocomplete\", \"off\", \"tabindex\", \"2\", \"maxlength\", \"100\", 1, \"form-control\", \"form-control-sm\"], [\"formControlName\", \"containerSize\", \"autocomplete\", \"off\", \"placeholder\", \"Enter Container Size\", \"tabindex\", \"3\", \"maxlength\", \"100\", 1, \"form-control\", \"form-control-sm\"], [1, \"col-md-2\", \"requiredfield\"], [\"formControlName\", \"typeID\", \"autocomplete\", \"off\", \"placeholder\", \"Choose Truck Type\", \"tabindex\", \"4\", \"maxlength\", \"100\", 1, \"form-control\", \"form-control-sm\", 3, \"dataSource\", \"fields\"], [\"formControlName\", \"truckWeight\", \"placeholder\", \"Enter Truck Weight\", \"autocomplete\", \"off\", \"tabindex\", \"5\", \"maxlength\", \"100\", 1, \"form-control\", \"form-control-sm\"], [\"formControlName\", \"transporterID\", \"autocomplete\", \"off\", \"placeholder\", \"Choose Transporter\", \"tabindex\", \"6\", \"maxlength\", \"100\", 1, \"form-control\", \"form-control-sm\", 3, \"dataSource\", \"fields\"], [\"formControlName\", \"driverLicenseNo\", \"placeholder\", \"Enter Driver LicenseNo.\", \"autocomplete\", \"off\", \"tabindex\", \"7\", \"maxlength\", \"100\", 1, \"form-control\", \"form-control-sm\"], [\"formControlName\", \"active\", \"tabindex\", \"8\", 3, \"checked\"], [\"formControlName\", \"lastPassedDate\", \"autocomplete\", \"off\", \"placeholder\", \"Last Passed Date\", \"tabindex\", \"9\", \"maxlength\", \"120\", 1, \"form-control\", \"form-control-sm\", 3, \"format\"], [1, \"text-danger\"]],\n    template: function TruckDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"section\", 3)(4, \"div\", 2)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"h4\", 7);\n        i0.ɵɵtemplate(9, TruckDetailComponent_span_9_Template, 2, 0, \"span\", 8)(10, TruckDetailComponent_span_10_Template, 2, 0, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function TruckDetailComponent_Template_button_click_12_listener() {\n          return ctx.saveTruck();\n        });\n        i0.ɵɵtext(13, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function TruckDetailComponent_Template_button_click_14_listener() {\n          return ctx.navigateToTruck();\n        });\n        i0.ɵɵtext(15, \" Cancel \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 12)(17, \"div\", 5)(18, \"div\", 12)(19, \"form\", 13)(20, \"div\", 14);\n        i0.ɵɵtemplate(21, TruckDetailComponent_label_21_Template, 2, 0, \"label\", 15)(22, TruckDetailComponent_label_22_Template, 2, 0, \"label\", 15);\n        i0.ɵɵelementStart(23, \"div\", 16);\n        i0.ɵɵelement(24, \"ejs-textbox\", 17);\n        i0.ɵɵtemplate(25, TruckDetailComponent_div_25_Template, 3, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"label\", 18);\n        i0.ɵɵtext(27, \"Vehicle BackRegNo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 16);\n        i0.ɵɵelement(29, \"ejs-textbox\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 4)(31, \"label\", 18);\n        i0.ɵɵtext(32, \"Container Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 16);\n        i0.ɵɵelement(34, \"ejs-textbox\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"label\", 18);\n        i0.ɵɵtext(36, \"Container Size:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 16);\n        i0.ɵɵelement(38, \"ejs-textbox\", 21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 4)(40, \"label\", 22);\n        i0.ɵɵtext(41, \"Truck Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 16);\n        i0.ɵɵelement(43, \"ejs-dropdownlist\", 23);\n        i0.ɵɵtemplate(44, TruckDetailComponent_div_44_Template, 3, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"label\", 18);\n        i0.ɵɵtext(46, \"Truck Weight:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 16);\n        i0.ɵɵelement(48, \"ejs-textbox\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(49, \"div\", 4)(50, \"label\", 22);\n        i0.ɵɵtext(51, \"Transporter:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 16);\n        i0.ɵɵelement(53, \"ejs-dropdownlist\", 25);\n        i0.ɵɵtemplate(54, TruckDetailComponent_div_54_Template, 3, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"label\", 18);\n        i0.ɵɵtext(56, \"Driver LicenseNo.:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"div\", 16);\n        i0.ɵɵelement(58, \"ejs-textbox\", 26);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(59, \"div\", 4)(60, \"label\", 18);\n        i0.ɵɵtext(61, \"Active:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"div\", 16);\n        i0.ɵɵelement(63, \"ejs-checkbox\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"label\", 18);\n        i0.ɵɵtext(65, \"Last Passed Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"div\", 16);\n        i0.ɵɵelement(67, \"ejs-datepicker\", 28);\n        i0.ɵɵelementEnd()()()()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAdd);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAdd);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.truckForm.valid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.truckForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAdd);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAdd);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.truckForm.controls[\"vehicleRegNo\"].invalid && (ctx.truckForm.controls[\"vehicleRegNo\"].touched || ctx.truckForm.controls[\"vehicleRegNo\"].dirty));\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"dataSource\", ctx.truckTypeList)(\"fields\", i0.ɵɵpureFunction0(15, _c0));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.truckForm.controls[\"typeID\"].invalid && (ctx.truckForm.controls[\"typeID\"].touched || ctx.truckForm.controls[\"typeID\"].dirty));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"dataSource\", ctx.transporterNames)(\"fields\", i0.ɵɵpureFunction0(16, _c1));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.truckForm.controls[\"transporterID\"].invalid && (ctx.truckForm.controls[\"transporterID\"].touched || ctx.truckForm.controls[\"transporterID\"].dirty));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"checked\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"format\", ctx.formatfilter);\n      }\n    },\n    dependencies: [MasterModule, i5.NgIf, i6.ɵNgNoValidate, i6.NgControlStatus, i6.NgControlStatusGroup, i6.MaxLengthValidator, i6.FormGroupDirective, i6.FormControlName, i7.DropDownListComponent, i8.DatePickerComponent, i9.TextBoxComponent, i10.CheckBoxComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","catchError","of","Swal","MasterModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","TruckDetailComponent","constructor","_sanitizer","service","spinner","route","router","isAdd","truckTypeList","transporterNames","formatfilter","today","Date","loadingTypeList","ngOnInit","breadCrumbItems","label","routerLink","active","id","snapshot","queryParams","truckForm","vehicleRegNo","value","disabled","required","containerType","containerSize","truckWeight","typeID","transporterID","driverLicenseNo","lastPassedDate","vehicleBackRegNo","remarks","undefined","getTruckById","getTruckTypes","subscribe","next","types","error","console","getTransporterNames","names","log","show","getTruckId","pipe","err","showError","result","controls","setValue","rounterLink","hide","saveTruck","formData","createdUser","localStorage","getItem","addNewTruck","updatedUser","editTruck","navigateToTruck","navigate","data","FormData","append","lastPass","localLastPassedDate","getTime","getTimezoneOffset","toISOString","split","createTruck","status","showSuccess","fire","messageContent","updateTruck","msg","statusText","_","ɵɵdirectiveInject","i1","DomSanitizer","i2","TruckDetailService","i3","NgxSpinnerService","i4","ActivatedRoute","Router","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TruckDetailComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","TruckDetailComponent_span_9_Template","TruckDetailComponent_span_10_Template","ɵɵlistener","TruckDetailComponent_Template_button_click_12_listener","TruckDetailComponent_Template_button_click_14_listener","TruckDetailComponent_label_21_Template","TruckDetailComponent_label_22_Template","TruckDetailComponent_div_25_Template","TruckDetailComponent_div_44_Template","TruckDetailComponent_div_54_Template","ɵɵadvance","ɵɵproperty","valid","invalid","touched","dirty","ɵɵpureFunction0","_c0","_c1","i5","NgIf","i6","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","i7","DropDownListComponent","i8","DatePickerComponent","i9","TextBoxComponent","i10","CheckBoxComponent","styles"],"sources":["D:\\PES\\RGL_Gate\\TMS_Web\\src\\app\\master\\components\\truck-detail\\truck-detail.component.ts","D:\\PES\\RGL_Gate\\TMS_Web\\src\\app\\master\\components\\truck-detail\\truck-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { catchError, last, of } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { MasterModule } from '../../master.module';\r\nimport { error } from 'console';\r\nimport { TruckDetailService } from './truck-detail.service';\r\n@Component({\r\n  selector: 'app-truck-detail',\r\n  standalone: true,\r\n  imports: [MasterModule],\r\n  templateUrl: './truck-detail.component.html',\r\n  styleUrl: './truck-detail.component.scss'\r\n})\r\nexport class TruckDetailComponent {\r\n  truckForm: FormGroup;\r\n  id: string;\r\n  breadCrumbItems: Array<{}>;\r\n  isAdd: boolean = true;\r\n  truckTypeList: any[] = []; // Array to store truck types\r\n  transporterNames:any[]=[];\r\n  formatfilter:string='dd-MMM-yyyy';\r\n  today : Date = new Date();\r\n  loadingTypeList:any[]=[\"Bin\",\"Bulk\",\"Containers\",\"Drums\",\"Pallets\",\"Skids\"];\r\n\r\n\r\n  constructor(\r\n    private _sanitizer: DomSanitizer,\r\n    private service: TruckDetailService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.breadCrumbItems = [{ label: 'Truck List', routerLink: '/truck-detail', active: false },\r\n    { label: 'Add New Truck', active: true }];\r\n    this.id = this.route.snapshot.queryParams['id'];\r\n   \r\n    this.truckForm = new FormGroup({\r\n      vehicleRegNo: new FormControl({value:this.id,disabled:!!this.id },Validators.required),\r\n      containerType: new FormControl(''),\r\n      containerSize:new FormControl(''),\r\n      truckWeight:new FormControl(''),\r\n      typeID: new FormControl('', Validators.required),\r\n      transporterID:new FormControl('',Validators.required),\r\n      active: new FormControl(false),\r\n      driverLicenseNo:new FormControl(''),\r\n      lastPassedDate:new FormControl(null),\r\n      vehicleBackRegNo:new FormControl(''),\r\n      remarks:new FormControl(''),\r\n\r\n      // isBlack:new FormControl(false),\r\n      // blackReason:new FormControl(''),\r\n      // blackDate:new FormControl(null),\r\n      // blackRemovedDate: new FormControl(null),\r\n      // blackRemovedReason:new FormControl(''),\r\n      //truckWeight:new FormControl(''),\r\n      //containerType:new FormControl(''),\r\n      //containerSize:new FormControl(''),\r\n      //name:new FormControl(''),\r\n    });\r\n    \r\n    if(this.id!=null && this.id!=undefined){\r\n      this.getTruckById();\r\n      // this.isAdd=false;\r\n    }\r\n    this.service.getTruckTypes('true').subscribe({\r\n      next: (types) => {\r\n        this.truckTypeList = types;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading truck types', error);\r\n      }\r\n    });\r\n    this.service.getTransporterNames().subscribe({\r\n      next:(names)=>{\r\n        console.log(\"Transporter Names Loaded:\",names);\r\n        this.transporterNames=names;\r\n      },\r\n      error:(error)=>{\r\n        console.log('Error Loading Transporter Names',error)\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  // getTruckById() {\r\n  //   this.spinner.show();\r\n  //   this.service.getTruckId(this.id)\r\n  //       .pipe(catchError((err) => {\r\n  //           this.showError(err); \r\n  //           return of(null); \r\n  //       }))\r\n  //       .subscribe((result) => {\r\n  //           if (result) {\r\n  //               this.truckForm.patchValue({\r\n  //                 vehicleRegNo: result.vehicleRegNo,\r\n  //                 containerType: result.containerType,\r\n  //                 containerSize: result.containerSize,\r\n  //                 truckWeight: result.truckWeight,\r\n  //                 typeID: result.typeID,\r\n  //                 transporterID: result.transporterID,\r\n  //                   driverLicenseNo:result.driverLicenseNo??\"\",\r\n  //                   active: result.active ?? false,\r\n  //                   lastPassedDate:result.lastPassedDate?new Date(result.lastPassedDate):null,\r\n\r\n  //                   //name:result.name??\"\",\r\n  //                   //containerType:result.containerType??\"\",\r\n  //                   //containerSize:result.containerSize??0,\r\n  //                   // isBlack: result.isBlack ?? false,\r\n  //                   // blackDate: result.blackDate ? new Date(result.blackDate) : null,\r\n  //                   // blackReason: result.blackReason ?? \"\",\r\n  //                   // blackRemovedDate:result.blackRemovedDate?new Date(result.blackRemovedDate):null,\r\n  //                   // blackRemovedReason:result.blackRemovedReason??\"\",\r\n  //               });\r\n                \r\n  //               this.breadCrumbItems = [\r\n  //                   { label: 'Truck List', routerLink: 'master/truck', active: false },\r\n  //                   { label: 'Edit Truck', active: true }\r\n  //               ];\r\n  //               this.isAdd = false; // Set to false since we are editing\r\n  //           } \r\n  //           this.spinner.hide();\r\n  //       });\r\n  // }\r\n  getTruckById() {\r\n    this.spinner.show();\r\n    this.service.getTruckId(this.id)\r\n   .pipe(catchError((err) => of(this.showError(err))))\r\n     .subscribe((result) => {\r\n      this.truckForm.controls['vehicleRegNo'].setValue(result.vehicleRegNo);\r\n      this.truckForm.controls['containerType'].setValue(result.containerType);\r\n      this.truckForm.controls['containerSize'].setValue(result.containerSize);\r\n      this.truckForm.controls['truckWeight'].setValue(result.truckWeight);\r\n      this.truckForm.controls['typeID'].setValue(result.typeID);\r\n      this.truckForm.controls['transporterID'].setValue(result.transporterID);\r\n      this.truckForm.controls['active'].setValue(result.active);\r\n      this.truckForm.controls['driverLicenseNo'].setValue(result.driverLicenseNo);\r\n      this.truckForm.controls['lastPassedDate'].setValue(result.lastPassedDate);\r\n      this.truckForm.controls['vehicleBackRegNo'].setValue(result.vehicleBackRegNo);\r\n      this.truckForm.controls['remarks'].setValue(result.remarks);\r\n      // this.truckForm.controls['isBlack'].setValue(result.isBlack);\r\n      // this.truckForm.controls['blackDate'].setValue(result.blackDate);\r\n      // this.truckForm.controls['blackReason'].setValue(result.blackReason);\r\n      // this.truckForm.controls['blackRemovedDate'].setValue(result.blackRemovedDate);\r\n      // this.truckForm.controls['blackRemovedReason'].setValue(result.blackRemovedReason);\r\n      this.isAdd=false;\r\n      this.breadCrumbItems = [{ label: 'Truck',rounterLink:'/truck-detail',active:false }, { label: 'Edit Truck', active: true }];\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  saveTruck() {\r\n    const formData = this.truckForm.value;\r\n    if (this.isAdd) {\r\n      formData.createdUser = localStorage.getItem('currentUser');\r\n      this.addNewTruck(formData);\r\n    } else {\r\n      formData.updatedUser = localStorage.getItem('currentUser');\r\n      this.editTruck(formData);\r\n    }\r\n  }\r\n  navigateToTruck() {\r\n    this.router.navigate(['master/truck']);\r\n  }\r\n\r\n  addNewTruck(data: any) {\r\n    this.spinner.show();\r\n    const formData = new FormData();\r\n    formData.append(\"VehicleRegNo\", data.vehicleRegNo);\r\n    formData.append(\"ContainerType\", data.containerType);\r\n    formData.append(\"ContainerSize\",data.containerSize);\r\n    formData.append(\"TruckWeight\", data.truckWeight);\r\n    formData.append(\"TypeID\",data.typeID);\r\n    formData.append(\"TransporterID\",data.transporterID);\r\n    formData.append(\"Active\",data.active);\r\n    formData.append(\"DriverLicenseNo\",data.driverLicenseNo);\r\n    formData.append(\"VehicleBackRegNo\",data.vehicleBackRegNo);\r\n    formData.append(\"Remarks\",data.remarks);\r\n    // formData.append(\"IsBlack\",data.isBlack.toString());\r\n    // formData.append(\"BlackReason\",data.blackReason);\r\n    // formData.append(\"BlackRemovedReason\",data.blackRemovedReason);\r\n    //formData.append(\"Name\",data.name);\r\n    //formData.append(\"ContainerType\",data.containerType);\r\n    //formData.append(\"ContainerSize\",data.containerSize);\r\n\r\n    // if (data.blackDate) {\r\n    //   const blackedDate = data.blackDate instanceof Date ? data.blackDate : new Date(data.blackDate);\r\n    //   const localDate = new Date(blackedDate.getTime() - blackedDate.getTimezoneOffset() * 60000)\r\n    //     .toISOString()\r\n    //     .split(\"T\")[0]; // Get only the date portion in 'yyyy-MM-dd' format\r\n    //   formData.append(\"BlackDate\", localDate);\r\n    // }\r\n    // if(data.blackRemovedDate){\r\n    //   const blackRemoved=data.blackRemovedDate instanceof Date?data.blackRemovedDate:new Date(data.blackRemovedDate);\r\n    //   const localRemovedDate=new Date(blackRemoved.getTime()-blackRemoved.getTimezoneOffset()*60000)\r\n    //   .toISOString()\r\n    //   .split(\"T\")[0];\r\n    //   formData.append(\"BlackRemovedDate\",localRemovedDate);\r\n    // }\r\n    if(data.lastPassedDate){\r\n      const lastPass=data.lastPassedDate instanceof Date? data.lastPassedDate:new Date(data.lastPassedDate);\r\n      const localLastPassedDate=new Date(lastPass.getTime()-lastPass.getTimezoneOffset()*60000)\r\n      .toISOString()\r\n      .split(\"T\")[0];\r\n      formData.append(\"LastPassedDate\",localLastPassedDate);\r\n    }\r\n\r\n    this.service.createTruck(formData)\r\n      .pipe(catchError((err) => of(this.showError(err))))\r\n      .subscribe((result) => {\r\n        if (result.status==true) {\r\n          this.spinner.hide();\r\n          this.showSuccess('Truck added successfully!');\r\n          this.router.navigate([\"master/truck\"]);\r\n        } else {\r\n          this.spinner.hide();\r\n          Swal.fire('Truck', result.messageContent, 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  editTruck(data: any) {\r\n    this.spinner.show();\r\n    const formData = new FormData();\r\n    data.active=data.active?true:false;\r\n    formData.append(\"VehicleRegNo\",this.id);\r\n    formData.append(\"ContainerType\", data.containerType);\r\n    formData.append(\"ContainerSize\",data.containerSize);\r\n    formData.append(\"TruckWeight\", data.truckWeight);\r\n    formData.append(\"TypeID\",data.typeID);\r\n    formData.append(\"TransporterID\",data.transporterID);\r\n    formData.append(\"Active\",data.active);\r\n    formData.append(\"DriverLicenseNo\",data.driverLicenseNo);\r\n    formData.append(\"VehicleBackRegNo\",data.vehicleBackRegNo);\r\n    formData.append(\"Remarks\",data.remarks);\r\n    \r\n    if(data.lastPassedDate){\r\n      const lastPass=data.lastPassedDate instanceof Date? data.lastPassedDate:new Date(data.lastPassedDate);\r\n      const localLastPassedDate=new Date(lastPass.getTime()-lastPass.getTimezoneOffset()*60000)\r\n      .toISOString()\r\n      .split(\"T\")[0];\r\n      formData.append(\"LastPassedDate\",localLastPassedDate);\r\n    }\r\n    \r\n    this.service.updateTruck(formData)\r\n      .pipe(catchError((err) => of(this.showError(err))))\r\n      .subscribe((result) => {\r\n        this.spinner.hide();\r\n        if (result.status) {\r\n          this.showSuccess('Truck updated successfully!');\r\n          this.router.navigate([\"master/truck\"]);\r\n        } else {\r\n          Swal.fire('Truck', result.messageContent, 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  showSuccess(msg: string) {\r\n    Swal.fire('Truck', msg, 'success');\r\n  }\r\n\r\n  showError(error: HttpErrorResponse) {\r\n    Swal.fire('Truck', error.statusText, 'error');\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"container-fluid\">\r\n            <!-- <app-page-title title=\"Truck\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title> -->\r\n        </div>\r\n        <section class=\"content my-0\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header d-flex align-items-center justify-content-between\">\r\n                            <h4 class=\"card-title mb-0\">\r\n                                <span *ngIf=\"isAdd\">New Truck</span>\r\n                                <span *ngIf=\"!isAdd\">Edit Truck</span>\r\n                            </h4>\r\n                            <div class=\"button-group d-flex\">\r\n                                <button\r\n                                    class=\"btn btn-info btn-sm me-1\"\r\n                                    (click)=\"saveTruck()\"\r\n                                    [disabled]=\"!truckForm.valid\">\r\n                                    Save\r\n                                </button>\r\n                                <button\r\n                                    class=\"btn btn-danger btn-sm\"\r\n                                    (click)=\"navigateToTruck()\">\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                    </div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                    <form [formGroup]=\"truckForm\">\r\n                                        <div class=\"row my-0\">\r\n                                          <label class=\"col-md-2 requiredfield\" *ngIf=\"isAdd\">Vehicle Reg No.:</label>\r\n                                          <label class=\"col-md-2 requiredfield\" *ngIf=\"!isAdd\">Vehicle Reg No.:</label>\r\n                                          <div class=\"form-group col-md-4\">\r\n                                              <ejs-textbox\r\n                                                  formControlName=\"vehicleRegNo\"\r\n                                                  class=\"form-control form-control-sm\"\r\n                                                  tabindex=\"0\" maxlength=\"50\" />\r\n                                              <div *ngIf=\"truckForm.controls['vehicleRegNo'].invalid && (truckForm.controls['vehicleRegNo'].touched || truckForm.controls['vehicleRegNo'].dirty)\">\r\n                                                  <small class=\"text-danger\">This field is required.</small>\r\n                                              </div>\r\n                                          </div>\r\n                                          <label class=\"col-md-2\">Vehicle BackRegNo:</label>\r\n                                          <div class=\"form-group col-md-4\">\r\n                                              <ejs-textbox\r\n                                                  formControlName=\"vehicleBackRegNo\"\r\n                                                  class=\"form-control form-control-sm\"\r\n                                                  placeholder=\"Enter Vehicle BackRegNo\"\r\n                                                  autocomplete=\"off\"\r\n                                                  tabindex=\"1\" maxlength=\"100\"/>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <label class=\"col-md-2\">Container Type:</label>\r\n                                            <div class=\"form-group col-md-4\">\r\n                                                <ejs-textbox\r\n                                                    formControlName=\"containerType\"\r\n                                                    class=\"form-control form-control-sm\"\r\n                                                    placeholder=\"Enter ContainerType\"\r\n                                                    autocomplete=\"off\"\r\n                                                    tabindex=\"2\"\r\n                                                    maxlength=\"100\" />\r\n                                            </div>\r\n                                            <label class=\"col-md-2\">Container Size:</label>\r\n                                            <div class=\"form-group col-md-4\">\r\n                                                <ejs-textbox\r\n                                                    formControlName=\"containerSize\"\r\n                                                    class=\"form-control form-control-sm\"\r\n                                                    autocomplete=\"off\"\r\n                                                    placeholder=\"Enter Container Size\"\r\n                                                    tabindex=\"3\"\r\n                                                    maxlength=\"100\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                          <label class=\"col-md-2 requiredfield\">Truck Type:</label>\r\n                                          <div class=\"form-group col-md-4\">\r\n                                            <ejs-dropdownlist \r\n                                              formControlName=\"typeID\"\r\n                                              [dataSource]=\"truckTypeList\"\r\n                                              [fields]=\"{ text: 'description', value: 'typeID' }\"\r\n                                              class=\"form-control form-control-sm\"\r\n                                              autocomplete=\"off\"\r\n                                              placeholder=\"Choose Truck Type\"\r\n                                              tabindex=\"4\"\r\n                                              maxlength=\"100\">\r\n                                            </ejs-dropdownlist>\r\n                                            <div *ngIf=\"truckForm.controls['typeID'].invalid && (truckForm.controls['typeID'].touched || truckForm.controls['typeID'].dirty)\">\r\n                                              <small class=\"text-danger\">This field is required.</small>\r\n                                            </div>\r\n                                          </div>\r\n                                          <label class=\"col-md-2\">Truck Weight:</label>\r\n                                            <div class=\"form-group col-md-4\">\r\n                                                <ejs-textbox\r\n                                                    formControlName=\"truckWeight\"\r\n                                                    class=\"form-control form-control-sm\"\r\n                                                    placeholder=\"Enter Truck Weight\"\r\n                                                    autocomplete=\"off\"\r\n                                                    tabindex=\"5\"\r\n                                                    maxlength=\"100\"/>\r\n                                            </div>\r\n                                          <!-- <label class=\"col-md-2\">Remarks:</label>\r\n                                              <div class=\"form-group col-md-4\">\r\n                                                <textarea formControlName=\"remarks\" \r\n                                                class=\"form-control form-control-sm\"\r\n                                                placeholder=\"Remarks\"\r\n                                                autocomplete=\"off\"\r\n                                                tabindex=\"2\"\r\n                                                maxlength=\"100\"></textarea>\r\n                                              </div> -->\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <label class=\"col-md-2 requiredfield\">Transporter:</label>\r\n                                          <div class=\"form-group col-md-4\">\r\n                                            <ejs-dropdownlist \r\n                                              formControlName=\"transporterID\"\r\n                                              [dataSource]=\"transporterNames\"\r\n                                              [fields]=\"{ text: 'transporterName', value: 'transporterID' }\"\r\n                                              class=\"form-control form-control-sm\"\r\n                                              autocomplete=\"off\"\r\n                                              placeholder=\"Choose Transporter\"\r\n                                              tabindex=\"6\"\r\n                                              maxlength=\"100\">\r\n                                            </ejs-dropdownlist>\r\n                                            <div *ngIf=\"truckForm.controls['transporterID'].invalid && (truckForm.controls['transporterID'].touched || truckForm.controls['transporterID'].dirty)\">\r\n                                              <small class=\"text-danger\">This field is required.</small>\r\n                                            </div>\r\n                                          </div>\r\n                                            <label class=\"col-md-2\">Driver LicenseNo.:</label>\r\n                                            <div class=\"form-group col-md-4\">\r\n                                                <ejs-textbox\r\n                                                    formControlName=\"driverLicenseNo\"\r\n                                                    class=\"form-control form-control-sm\"\r\n                                                    placeholder=\"Enter Driver LicenseNo.\"\r\n                                                    autocomplete=\"off\"\r\n                                                    tabindex=\"7\"\r\n                                                    maxlength=\"100\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <label class=\"col-md-2\">Active:</label>\r\n                                            <div class=\"form-group col-md-4\">\r\n                                                <ejs-checkbox formControlName=\"active\" tabindex=\"8\" [checked]=\"true\"></ejs-checkbox>\r\n                                            </div>\r\n                                            <label class=\"col-md-2\">Last Passed Date:</label>\r\n                                        <div class=\"form-group col-md-4\">\r\n                                            <ejs-datepicker\r\n                                                formControlName=\"lastPassedDate\"\r\n                                                class=\"form-control form-control-sm\"\r\n                                                [format]=\"formatfilter\"\r\n                                                autocomplete=\"off\"\r\n                                                placeholder=\"Last Passed Date\"\r\n                                                tabindex=\"9\"\r\n                                                maxlength=\"120\">\r\n                                            </ejs-datepicker>\r\n                                        </div>\r\n                                      </div>\r\n                                        <!-- <div class=\"row\">\r\n                                            <label for=\"blackDate\" class=\"col-md-2\">Black Date:</label>\r\n                                              <div class=\"form-group col-md-4\">\r\n                                                  <ejs-datepicker formControlName=\"blackDate\" class=\"form-control form-control-sm\" autocomplete=\"off\"\r\n                                                  tabindex=\"10\" maxlength=\"100\"\r\n                                                   [format]=\"formatfilter\" floatLabelType='Always'>\r\n                                                  </ejs-datepicker>\r\n                                              </div>\r\n                                              <label class=\"col-md-2\">Black Reason:</label>\r\n                                              <div class=\"form-group col-md-4\">\r\n                                                  <textarea formControlName=\"blackReason\"\r\n                                                      class=\"form-control form-control-sm\"\r\n                                                      placeholder=\"Black Reason\"\r\n                                                      autocomplete=\"off\"\r\n                                                      tabindex=\"11\"\r\n                                                      maxlength=\"100\">\r\n                                                    </textarea>\r\n                                              </div>\r\n                                        </div>\r\n                                      <div class=\"row\">\r\n                                        <label class=\"col-md-2\">Black Removed Date:</label>\r\n                                        <div class=\"form-group col-md-4\">\r\n                                            <ejs-datepicker class=\"form-control form-control-sm\" formControlName=\"blackRemovedDate\" autocomplete=\"off\"\r\n                                            tabindex=\"15\"\r\n                                            [format]=\"formatfilter\"\r\n                                            floatLabelType=\"Always\"\r\n                                            maxlength=\"100\"></ejs-datepicker>\r\n                                        </div>\r\n                                        <label class=\"col-md-2\">Black Removed Reason:</label>\r\n                                        <div class=\"form-group col-md-4\">\r\n                                            <textarea\r\n                                                formControlName=\"blackRemovedReason\"\r\n                                                class=\"form-control form-control-sm\"\r\n                                                autocomplete=\"off\"\r\n                                                placeholder=\"Black Removed Reason\"\r\n                                                tabindex=\"16\"\r\n                                                maxlength=\"150\">\r\n                                            </textarea>\r\n                                        </div>\r\n                                      </div> -->\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</div>\r\n  "],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAInE,SAASC,UAAU,EAAQC,EAAE,QAAQ,MAAM;AAC3C,OAAOC,IAAI,MAAM,aAAa;AAE9B,SAASC,YAAY,QAAQ,qBAAqB;;;;;;;;;;;;;;;;;;;;;;ICGlBC,EAAA,CAAAC,cAAA,WAAoB;IAAAD,EAAA,CAAAE,MAAA,gBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACpCH,EAAA,CAAAC,cAAA,WAAqB;IAAAD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAqB5BH,EAAA,CAAAC,cAAA,gBAAoD;IAAAD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAC5EH,EAAA,CAAAC,cAAA,gBAAqD;IAAAD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAOrEH,EADJ,CAAAC,cAAA,UAAoJ,gBACrH;IAAAD,EAAA,CAAAE,MAAA,8BAAuB;IACtDF,EADsD,CAAAG,YAAA,EAAQ,EACxD;;;;;IAgDNH,EADF,CAAAC,cAAA,UAAkI,gBACrG;IAAAD,EAAA,CAAAE,MAAA,8BAAuB;IACpDF,EADoD,CAAAG,YAAA,EAAQ,EACtD;;;;;IAoCJH,EADF,CAAAC,cAAA,UAAuJ,gBAC1H;IAAAD,EAAA,CAAAE,MAAA,8BAAuB;IACpDF,EADoD,CAAAG,YAAA,EAAQ,EACtD;;;AD9GlD,OAAM,MAAOC,oBAAoB;EAY/BC,YACUC,UAAwB,EACxBC,OAA2B,EAC3BC,OAA0B,EAC1BC,KAAqB,EACrBC,MAAc;IAJd,KAAAJ,UAAU,GAAVA,UAAU;IACV,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IAbhB,KAAAC,KAAK,GAAY,IAAI;IACrB,KAAAC,aAAa,GAAU,EAAE,CAAC,CAAC;IAC3B,KAAAC,gBAAgB,GAAO,EAAE;IACzB,KAAAC,YAAY,GAAQ,aAAa;IACjC,KAAAC,KAAK,GAAU,IAAIC,IAAI,EAAE;IACzB,KAAAC,eAAe,GAAO,CAAC,KAAK,EAAC,MAAM,EAAC,YAAY,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,CAAC;EASxE;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,GAAG,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,UAAU,EAAE,eAAe;MAAEC,MAAM,EAAE;IAAK,CAAE,EAC3F;MAAEF,KAAK,EAAE,eAAe;MAAEE,MAAM,EAAE;IAAI,CAAE,CAAC;IACzC,IAAI,CAACC,EAAE,GAAG,IAAI,CAACd,KAAK,CAACe,QAAQ,CAACC,WAAW,CAAC,IAAI,CAAC;IAE/C,IAAI,CAACC,SAAS,GAAG,IAAIhC,SAAS,CAAC;MAC7BiC,YAAY,EAAE,IAAIlC,WAAW,CAAC;QAACmC,KAAK,EAAC,IAAI,CAACL,EAAE;QAACM,QAAQ,EAAC,CAAC,CAAC,IAAI,CAACN;MAAE,CAAE,EAAC5B,UAAU,CAACmC,QAAQ,CAAC;MACtFC,aAAa,EAAE,IAAItC,WAAW,CAAC,EAAE,CAAC;MAClCuC,aAAa,EAAC,IAAIvC,WAAW,CAAC,EAAE,CAAC;MACjCwC,WAAW,EAAC,IAAIxC,WAAW,CAAC,EAAE,CAAC;MAC/ByC,MAAM,EAAE,IAAIzC,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACmC,QAAQ,CAAC;MAChDK,aAAa,EAAC,IAAI1C,WAAW,CAAC,EAAE,EAACE,UAAU,CAACmC,QAAQ,CAAC;MACrDR,MAAM,EAAE,IAAI7B,WAAW,CAAC,KAAK,CAAC;MAC9B2C,eAAe,EAAC,IAAI3C,WAAW,CAAC,EAAE,CAAC;MACnC4C,cAAc,EAAC,IAAI5C,WAAW,CAAC,IAAI,CAAC;MACpC6C,gBAAgB,EAAC,IAAI7C,WAAW,CAAC,EAAE,CAAC;MACpC8C,OAAO,EAAC,IAAI9C,WAAW,CAAC,EAAE;MAE1B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACD,CAAC;IAEF,IAAG,IAAI,CAAC8B,EAAE,IAAE,IAAI,IAAI,IAAI,CAACA,EAAE,IAAEiB,SAAS,EAAC;MACrC,IAAI,CAACC,YAAY,EAAE;MACnB;IACF;IACA,IAAI,CAAClC,OAAO,CAACmC,aAAa,CAAC,MAAM,CAAC,CAACC,SAAS,CAAC;MAC3CC,IAAI,EAAGC,KAAK,IAAI;QACd,IAAI,CAACjC,aAAa,GAAGiC,KAAK;MAC5B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;KACD,CAAC;IACF,IAAI,CAACvC,OAAO,CAACyC,mBAAmB,EAAE,CAACL,SAAS,CAAC;MAC3CC,IAAI,EAAEK,KAAK,IAAG;QACZF,OAAO,CAACG,GAAG,CAAC,2BAA2B,EAACD,KAAK,CAAC;QAC9C,IAAI,CAACpC,gBAAgB,GAACoC,KAAK;MAC7B,CAAC;MACDH,KAAK,EAAEA,KAAK,IAAG;QACbC,OAAO,CAACG,GAAG,CAAC,iCAAiC,EAACJ,KAAK,CAAC;MACtD;KACD,CAAC;EACJ;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAL,YAAYA,CAAA;IACV,IAAI,CAACjC,OAAO,CAAC2C,IAAI,EAAE;IACnB,IAAI,CAAC5C,OAAO,CAAC6C,UAAU,CAAC,IAAI,CAAC7B,EAAE,CAAC,CAChC8B,IAAI,CAACzD,UAAU,CAAE0D,GAAG,IAAKzD,EAAE,CAAC,IAAI,CAAC0D,SAAS,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,CAChDX,SAAS,CAAEa,MAAM,IAAI;MACrB,IAAI,CAAC9B,SAAS,CAAC+B,QAAQ,CAAC,cAAc,CAAC,CAACC,QAAQ,CAACF,MAAM,CAAC7B,YAAY,CAAC;MACrE,IAAI,CAACD,SAAS,CAAC+B,QAAQ,CAAC,eAAe,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACzB,aAAa,CAAC;MACvE,IAAI,CAACL,SAAS,CAAC+B,QAAQ,CAAC,eAAe,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACxB,aAAa,CAAC;MACvE,IAAI,CAACN,SAAS,CAAC+B,QAAQ,CAAC,aAAa,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACvB,WAAW,CAAC;MACnE,IAAI,CAACP,SAAS,CAAC+B,QAAQ,CAAC,QAAQ,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACtB,MAAM,CAAC;MACzD,IAAI,CAACR,SAAS,CAAC+B,QAAQ,CAAC,eAAe,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACrB,aAAa,CAAC;MACvE,IAAI,CAACT,SAAS,CAAC+B,QAAQ,CAAC,QAAQ,CAAC,CAACC,QAAQ,CAACF,MAAM,CAAClC,MAAM,CAAC;MACzD,IAAI,CAACI,SAAS,CAAC+B,QAAQ,CAAC,iBAAiB,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACpB,eAAe,CAAC;MAC3E,IAAI,CAACV,SAAS,CAAC+B,QAAQ,CAAC,gBAAgB,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACnB,cAAc,CAAC;MACzE,IAAI,CAACX,SAAS,CAAC+B,QAAQ,CAAC,kBAAkB,CAAC,CAACC,QAAQ,CAACF,MAAM,CAAClB,gBAAgB,CAAC;MAC7E,IAAI,CAACZ,SAAS,CAAC+B,QAAQ,CAAC,SAAS,CAAC,CAACC,QAAQ,CAACF,MAAM,CAACjB,OAAO,CAAC;MAC3D;MACA;MACA;MACA;MACA;MACA,IAAI,CAAC5B,KAAK,GAAC,KAAK;MAChB,IAAI,CAACQ,eAAe,GAAG,CAAC;QAAEC,KAAK,EAAE,OAAO;QAACuC,WAAW,EAAC,eAAe;QAACrC,MAAM,EAAC;MAAK,CAAE,EAAE;QAAEF,KAAK,EAAE,YAAY;QAAEE,MAAM,EAAE;MAAI,CAAE,CAAC;MAC3H,IAAI,CAACd,OAAO,CAACoD,IAAI,EAAE;IACrB,CAAC,CAAC;EACJ;EAEAC,SAASA,CAAA;IACP,MAAMC,QAAQ,GAAG,IAAI,CAACpC,SAAS,CAACE,KAAK;IACrC,IAAI,IAAI,CAACjB,KAAK,EAAE;MACdmD,QAAQ,CAACC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC1D,IAAI,CAACC,WAAW,CAACJ,QAAQ,CAAC;IAC5B,CAAC,MAAM;MACLA,QAAQ,CAACK,WAAW,GAAGH,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC1D,IAAI,CAACG,SAAS,CAACN,QAAQ,CAAC;IAC1B;EACF;EACAO,eAAeA,CAAA;IACb,IAAI,CAAC3D,MAAM,CAAC4D,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;EAEAJ,WAAWA,CAACK,IAAS;IACnB,IAAI,CAAC/D,OAAO,CAAC2C,IAAI,EAAE;IACnB,MAAMW,QAAQ,GAAG,IAAIU,QAAQ,EAAE;IAC/BV,QAAQ,CAACW,MAAM,CAAC,cAAc,EAAEF,IAAI,CAAC5C,YAAY,CAAC;IAClDmC,QAAQ,CAACW,MAAM,CAAC,eAAe,EAAEF,IAAI,CAACxC,aAAa,CAAC;IACpD+B,QAAQ,CAACW,MAAM,CAAC,eAAe,EAACF,IAAI,CAACvC,aAAa,CAAC;IACnD8B,QAAQ,CAACW,MAAM,CAAC,aAAa,EAAEF,IAAI,CAACtC,WAAW,CAAC;IAChD6B,QAAQ,CAACW,MAAM,CAAC,QAAQ,EAACF,IAAI,CAACrC,MAAM,CAAC;IACrC4B,QAAQ,CAACW,MAAM,CAAC,eAAe,EAACF,IAAI,CAACpC,aAAa,CAAC;IACnD2B,QAAQ,CAACW,MAAM,CAAC,QAAQ,EAACF,IAAI,CAACjD,MAAM,CAAC;IACrCwC,QAAQ,CAACW,MAAM,CAAC,iBAAiB,EAACF,IAAI,CAACnC,eAAe,CAAC;IACvD0B,QAAQ,CAACW,MAAM,CAAC,kBAAkB,EAACF,IAAI,CAACjC,gBAAgB,CAAC;IACzDwB,QAAQ,CAACW,MAAM,CAAC,SAAS,EAACF,IAAI,CAAChC,OAAO,CAAC;IACvC;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAGgC,IAAI,CAAClC,cAAc,EAAC;MACrB,MAAMqC,QAAQ,GAACH,IAAI,CAAClC,cAAc,YAAYrB,IAAI,GAAEuD,IAAI,CAAClC,cAAc,GAAC,IAAIrB,IAAI,CAACuD,IAAI,CAAClC,cAAc,CAAC;MACrG,MAAMsC,mBAAmB,GAAC,IAAI3D,IAAI,CAAC0D,QAAQ,CAACE,OAAO,EAAE,GAACF,QAAQ,CAACG,iBAAiB,EAAE,GAAC,KAAK,CAAC,CACxFC,WAAW,EAAE,CACbC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACdjB,QAAQ,CAACW,MAAM,CAAC,gBAAgB,EAACE,mBAAmB,CAAC;IACvD;IAEA,IAAI,CAACpE,OAAO,CAACyE,WAAW,CAAClB,QAAQ,CAAC,CAC/BT,IAAI,CAACzD,UAAU,CAAE0D,GAAG,IAAKzD,EAAE,CAAC,IAAI,CAAC0D,SAAS,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,CAClDX,SAAS,CAAEa,MAAM,IAAI;MACpB,IAAIA,MAAM,CAACyB,MAAM,IAAE,IAAI,EAAE;QACvB,IAAI,CAACzE,OAAO,CAACoD,IAAI,EAAE;QACnB,IAAI,CAACsB,WAAW,CAAC,2BAA2B,CAAC;QAC7C,IAAI,CAACxE,MAAM,CAAC4D,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;MACxC,CAAC,MAAM;QACL,IAAI,CAAC9D,OAAO,CAACoD,IAAI,EAAE;QACnB9D,IAAI,CAACqF,IAAI,CAAC,OAAO,EAAE3B,MAAM,CAAC4B,cAAc,EAAE,OAAO,CAAC;MACpD;IACF,CAAC,CAAC;EACN;EAEAhB,SAASA,CAACG,IAAS;IACjB,IAAI,CAAC/D,OAAO,CAAC2C,IAAI,EAAE;IACnB,MAAMW,QAAQ,GAAG,IAAIU,QAAQ,EAAE;IAC/BD,IAAI,CAACjD,MAAM,GAACiD,IAAI,CAACjD,MAAM,GAAC,IAAI,GAAC,KAAK;IAClCwC,QAAQ,CAACW,MAAM,CAAC,cAAc,EAAC,IAAI,CAAClD,EAAE,CAAC;IACvCuC,QAAQ,CAACW,MAAM,CAAC,eAAe,EAAEF,IAAI,CAACxC,aAAa,CAAC;IACpD+B,QAAQ,CAACW,MAAM,CAAC,eAAe,EAACF,IAAI,CAACvC,aAAa,CAAC;IACnD8B,QAAQ,CAACW,MAAM,CAAC,aAAa,EAAEF,IAAI,CAACtC,WAAW,CAAC;IAChD6B,QAAQ,CAACW,MAAM,CAAC,QAAQ,EAACF,IAAI,CAACrC,MAAM,CAAC;IACrC4B,QAAQ,CAACW,MAAM,CAAC,eAAe,EAACF,IAAI,CAACpC,aAAa,CAAC;IACnD2B,QAAQ,CAACW,MAAM,CAAC,QAAQ,EAACF,IAAI,CAACjD,MAAM,CAAC;IACrCwC,QAAQ,CAACW,MAAM,CAAC,iBAAiB,EAACF,IAAI,CAACnC,eAAe,CAAC;IACvD0B,QAAQ,CAACW,MAAM,CAAC,kBAAkB,EAACF,IAAI,CAACjC,gBAAgB,CAAC;IACzDwB,QAAQ,CAACW,MAAM,CAAC,SAAS,EAACF,IAAI,CAAChC,OAAO,CAAC;IAEvC,IAAGgC,IAAI,CAAClC,cAAc,EAAC;MACrB,MAAMqC,QAAQ,GAACH,IAAI,CAAClC,cAAc,YAAYrB,IAAI,GAAEuD,IAAI,CAAClC,cAAc,GAAC,IAAIrB,IAAI,CAACuD,IAAI,CAAClC,cAAc,CAAC;MACrG,MAAMsC,mBAAmB,GAAC,IAAI3D,IAAI,CAAC0D,QAAQ,CAACE,OAAO,EAAE,GAACF,QAAQ,CAACG,iBAAiB,EAAE,GAAC,KAAK,CAAC,CACxFC,WAAW,EAAE,CACbC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACdjB,QAAQ,CAACW,MAAM,CAAC,gBAAgB,EAACE,mBAAmB,CAAC;IACvD;IAEA,IAAI,CAACpE,OAAO,CAAC8E,WAAW,CAACvB,QAAQ,CAAC,CAC/BT,IAAI,CAACzD,UAAU,CAAE0D,GAAG,IAAKzD,EAAE,CAAC,IAAI,CAAC0D,SAAS,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,CAClDX,SAAS,CAAEa,MAAM,IAAI;MACpB,IAAI,CAAChD,OAAO,CAACoD,IAAI,EAAE;MACnB,IAAIJ,MAAM,CAACyB,MAAM,EAAE;QACjB,IAAI,CAACC,WAAW,CAAC,6BAA6B,CAAC;QAC/C,IAAI,CAACxE,MAAM,CAAC4D,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;MACxC,CAAC,MAAM;QACLxE,IAAI,CAACqF,IAAI,CAAC,OAAO,EAAE3B,MAAM,CAAC4B,cAAc,EAAE,OAAO,CAAC;MACpD;IACF,CAAC,CAAC;EACN;EAEAF,WAAWA,CAACI,GAAW;IACrBxF,IAAI,CAACqF,IAAI,CAAC,OAAO,EAAEG,GAAG,EAAE,SAAS,CAAC;EACpC;EAEA/B,SAASA,CAACT,KAAwB;IAChChD,IAAI,CAACqF,IAAI,CAAC,OAAO,EAAErC,KAAK,CAACyC,UAAU,EAAE,OAAO,CAAC;EAC/C;EAAC,QAAAC,CAAA,G;qBA3PUpF,oBAAoB,EAAAJ,EAAA,CAAAyF,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAA3F,EAAA,CAAAyF,iBAAA,CAAAG,EAAA,CAAAC,kBAAA,GAAA7F,EAAA,CAAAyF,iBAAA,CAAAK,EAAA,CAAAC,iBAAA,GAAA/F,EAAA,CAAAyF,iBAAA,CAAAO,EAAA,CAAAC,cAAA,GAAAjG,EAAA,CAAAyF,iBAAA,CAAAO,EAAA,CAAAE,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApB/F,oBAAoB;IAAAgG,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAtG,EAAA,CAAAuG,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjB7B7G,EADJ,CAAAC,cAAA,aAAqB,aACY;QACzBD,EAAA,CAAA+G,SAAA,aAEM;QAMc/G,EALpB,CAAAC,cAAA,iBAA8B,aACG,aACR,aACK,aAC6D,YAC3C;QAExBD,EADA,CAAAgH,UAAA,IAAAC,oCAAA,kBAAoB,KAAAC,qCAAA,kBACC;QACzBlH,EAAA,CAAAG,YAAA,EAAK;QAEDH,EADJ,CAAAC,cAAA,cAAiC,kBAIK;QAD9BD,EAAA,CAAAmH,UAAA,mBAAAC,uDAAA;UAAA,OAASN,GAAA,CAAAjD,SAAA,EAAW;QAAA,EAAC;QAErB7D,EAAA,CAAAE,MAAA,cACJ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACTH,EAAA,CAAAC,cAAA,kBAEgC;QAA5BD,EAAA,CAAAmH,UAAA,mBAAAE,uDAAA;UAAA,OAASP,GAAA,CAAAzC,eAAA,EAAiB;QAAA,EAAC;QAC3BrE,EAAA,CAAAE,MAAA,gBACJ;QAEZF,EAFY,CAAAG,YAAA,EAAS,EACP,EACR;QAKcH,EAJhB,CAAAC,cAAA,eAAuB,cACD,eACS,gBACW,eACJ;QAEpBD,EADA,CAAAgH,UAAA,KAAAM,sCAAA,oBAAoD,KAAAC,sCAAA,oBACC;QACrDvH,EAAA,CAAAC,cAAA,eAAiC;QAC7BD,EAAA,CAAA+G,SAAA,uBAGkC;QAClC/G,EAAA,CAAAgH,UAAA,KAAAQ,oCAAA,iBAAoJ;QAGxJxH,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,0BAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAClDH,EAAA,CAAAC,cAAA,eAAiC;QAC7BD,EAAA,CAAA+G,SAAA,uBAKkC;QAExC/G,EADE,CAAAG,YAAA,EAAM,EACF;QAEFH,EADJ,CAAAC,cAAA,cAAiB,iBACW;QAAAD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC/CH,EAAA,CAAAC,cAAA,eAAiC;QAC7BD,EAAA,CAAA+G,SAAA,uBAMsB;QAC1B/G,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC/CH,EAAA,CAAAC,cAAA,eAAiC;QAC7BD,EAAA,CAAA+G,SAAA,uBAMqB;QAE7B/G,EADI,CAAAG,YAAA,EAAM,EACJ;QAEJH,EADF,CAAAC,cAAA,cAAiB,iBACuB;QAAAD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzDH,EAAA,CAAAC,cAAA,eAAiC;QAC/BD,EAAA,CAAA+G,SAAA,4BASmB;QACnB/G,EAAA,CAAAgH,UAAA,KAAAS,oCAAA,iBAAkI;QAGpIzH,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,qBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC3CH,EAAA,CAAAC,cAAA,eAAiC;QAC7BD,EAAA,CAAA+G,SAAA,uBAMqB;QAW7B/G,EAVI,CAAAG,YAAA,EAAM,EAUJ;QAEFH,EADJ,CAAAC,cAAA,cAAiB,iBACyB;QAAAD,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5DH,EAAA,CAAAC,cAAA,eAAiC;QAC/BD,EAAA,CAAA+G,SAAA,4BASmB;QACnB/G,EAAA,CAAAgH,UAAA,KAAAU,oCAAA,iBAAuJ;QAGzJ1H,EAAA,CAAAG,YAAA,EAAM;QACJH,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,0BAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAClDH,EAAA,CAAAC,cAAA,eAAiC;QAC7BD,EAAA,CAAA+G,SAAA,uBAMqB;QAE7B/G,EADI,CAAAG,YAAA,EAAM,EACJ;QAEFH,EADJ,CAAAC,cAAA,cAAiB,iBACW;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvCH,EAAA,CAAAC,cAAA,eAAiC;QAC7BD,EAAA,CAAA+G,SAAA,wBAAoF;QACxF/G,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,yBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACrDH,EAAA,CAAAC,cAAA,eAAiC;QAC7BD,EAAA,CAAA+G,SAAA,0BAQiB;QAoD7D/G,EAnDwC,CAAAG,YAAA,EAAM,EACF,EAyCD,EACL,EACJ,EACJ,EACJ,EACJ,EACJ,EACA,EACR,EACJ;;;QArMiCH,EAAA,CAAA2H,SAAA,GAAW;QAAX3H,EAAA,CAAA4H,UAAA,SAAAd,GAAA,CAAAnG,KAAA,CAAW;QACXX,EAAA,CAAA2H,SAAA,EAAY;QAAZ3H,EAAA,CAAA4H,UAAA,UAAAd,GAAA,CAAAnG,KAAA,CAAY;QAMfX,EAAA,CAAA2H,SAAA,GAA6B;QAA7B3H,EAAA,CAAA4H,UAAA,cAAAd,GAAA,CAAApF,SAAA,CAAAmG,KAAA,CAA6B;QAavB7H,EAAA,CAAA2H,SAAA,GAAuB;QAAvB3H,EAAA,CAAA4H,UAAA,cAAAd,GAAA,CAAApF,SAAA,CAAuB;QAEgB1B,EAAA,CAAA2H,SAAA,GAAW;QAAX3H,EAAA,CAAA4H,UAAA,SAAAd,GAAA,CAAAnG,KAAA,CAAW;QACXX,EAAA,CAAA2H,SAAA,EAAY;QAAZ3H,EAAA,CAAA4H,UAAA,UAAAd,GAAA,CAAAnG,KAAA,CAAY;QAMzCX,EAAA,CAAA2H,SAAA,GAA4I;QAA5I3H,EAAA,CAAA4H,UAAA,SAAAd,GAAA,CAAApF,SAAA,CAAA+B,QAAA,iBAAAqE,OAAA,KAAAhB,GAAA,CAAApF,SAAA,CAAA+B,QAAA,iBAAAsE,OAAA,IAAAjB,GAAA,CAAApF,SAAA,CAAA+B,QAAA,iBAAAuE,KAAA,EAA4I;QAyClJhI,EAAA,CAAA2H,SAAA,IAA4B;QAC5B3H,EADA,CAAA4H,UAAA,eAAAd,GAAA,CAAAlG,aAAA,CAA4B,WAAAZ,EAAA,CAAAiI,eAAA,KAAAC,GAAA,EACuB;QAO/ClI,EAAA,CAAA2H,SAAA,EAA0H;QAA1H3H,EAAA,CAAA4H,UAAA,SAAAd,GAAA,CAAApF,SAAA,CAAA+B,QAAA,WAAAqE,OAAA,KAAAhB,GAAA,CAAApF,SAAA,CAAA+B,QAAA,WAAAsE,OAAA,IAAAjB,GAAA,CAAApF,SAAA,CAAA+B,QAAA,WAAAuE,KAAA,EAA0H;QA6B9HhI,EAAA,CAAA2H,SAAA,GAA+B;QAC/B3H,EADA,CAAA4H,UAAA,eAAAd,GAAA,CAAAjG,gBAAA,CAA+B,WAAAb,EAAA,CAAAiI,eAAA,KAAAE,GAAA,EAC+B;QAO1DnI,EAAA,CAAA2H,SAAA,EAA+I;QAA/I3H,EAAA,CAAA4H,UAAA,SAAAd,GAAA,CAAApF,SAAA,CAAA+B,QAAA,kBAAAqE,OAAA,KAAAhB,GAAA,CAAApF,SAAA,CAAA+B,QAAA,kBAAAsE,OAAA,IAAAjB,GAAA,CAAApF,SAAA,CAAA+B,QAAA,kBAAAuE,KAAA,EAA+I;QAkB7FhI,EAAA,CAAA2H,SAAA,GAAgB;QAAhB3H,EAAA,CAAA4H,UAAA,iBAAgB;QAOpE5H,EAAA,CAAA2H,SAAA,GAAuB;QAAvB3H,EAAA,CAAA4H,UAAA,WAAAd,GAAA,CAAAhG,YAAA,CAAuB;;;mBDzI3Df,YAAY,EAAAqI,EAAA,CAAAC,IAAA,EAAAC,EAAA,CAAAC,aAAA,EAAAD,EAAA,CAAAE,eAAA,EAAAF,EAAA,CAAAG,oBAAA,EAAAH,EAAA,CAAAI,kBAAA,EAAAJ,EAAA,CAAAK,kBAAA,EAAAL,EAAA,CAAAM,eAAA,EAAAC,EAAA,CAAAC,qBAAA,EAAAC,EAAA,CAAAC,mBAAA,EAAAC,EAAA,CAAAC,gBAAA,EAAAC,GAAA,CAAAC,iBAAA;IAAAC,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}