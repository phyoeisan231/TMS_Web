{"ast":null,"code":"// angular import\nimport { APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// project import\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './theme/shared/shared.module';\nimport { AppComponent } from './app.component';\nimport { MasterModule } from './master/master.module';\nimport { environment } from 'src/environments/environment';\nimport { ConfigService } from './config.service';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/angular-jwt\";\nlet allowedDomains = [];\n// Function to initialize the app by loading config.json\nexport function appInitializer(configService) {\n  return () => configService.getConfig().toPromise().then(data => {\n    environment.url = data.url; // Set the API URL in the environment\n    allowedDomains.push(data.domain);\n  });\n}\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\nexport class AppModule {\n  static #_ = this.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [ConfigService, {\n      provide: APP_INITIALIZER,\n      useFactory: appInitializer,\n      multi: true,\n      deps: [ConfigService]\n    }],\n    imports: [BrowserModule, AppRoutingModule, SharedModule, MasterModule, BrowserAnimationsModule, JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: allowedDomains,\n        disallowedRoutes: []\n      }\n    })]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, SharedModule, MasterModule, BrowserAnimationsModule, i1.JwtModule]\n  });\n})();","map":{"version":3,"names":["APP_INITIALIZER","BrowserModule","BrowserAnimationsModule","AppRoutingModule","SharedModule","AppComponent","MasterModule","environment","ConfigService","JwtModule","allowedDomains","appInitializer","configService","getConfig","toPromise","then","data","url","push","domain","tokenGetter","localStorage","getItem","AppModule","_","_2","bootstrap","_3","provide","useFactory","multi","deps","imports","forRoot","config","disallowedRoutes","declarations","i1"],"sources":["D:\\PES\\RGL_Gate\\TMS_Web\\src\\app\\app.module.ts"],"sourcesContent":["// angular import\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// project import\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './theme/shared/shared.module';\nimport { AppComponent } from './app.component';\nimport { MasterModule } from './master/master.module';\nimport { environment } from 'src/environments/environment';\nimport { ConfigService } from './config.service';\nimport { JwtModule } from '@auth0/angular-jwt';\nlet allowedDomains: (string | RegExp)[] = [];\n// Function to initialize the app by loading config.json\nexport function appInitializer(configService: ConfigService) {\n  return () =>\n    configService.getConfig().toPromise().then((data: any) => {\n      environment.url = data.url; // Set the API URL in the environment\n      allowedDomains.push(data.domain);\n    });\n}\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, SharedModule,MasterModule, BrowserAnimationsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: allowedDomains,\n        disallowedRoutes: []\n      }\n    }),\n  ],\n  bootstrap: [AppComponent],\n  providers: [\n    ConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: appInitializer,\n      multi: true,\n      deps: [ConfigService],\n    },\n  ],\n})\nexport class AppModule {}\n"],"mappings":"AAAA;AACA,SAASA,eAAe,QAAkB,eAAe;AACzD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E;AACA,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,SAAS,QAAQ,oBAAoB;;;AAC9C,IAAIC,cAAc,GAAwB,EAAE;AAC5C;AACA,OAAM,SAAUC,cAAcA,CAACC,aAA4B;EACzD,OAAO,MACLA,aAAa,CAACC,SAAS,EAAE,CAACC,SAAS,EAAE,CAACC,IAAI,CAAEC,IAAS,IAAI;IACvDT,WAAW,CAACU,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5BP,cAAc,CAACQ,IAAI,CAACF,IAAI,CAACG,MAAM,CAAC;EAClC,CAAC,CAAC;AACN;AAEA,OAAM,SAAUC,WAAWA,CAAA;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC;AAwBA,OAAM,MAAOC,SAAS;EAAA,QAAAC,CAAA,G;qBAATD,SAAS;EAAA;EAAA,QAAAE,EAAA,G;UAATF,SAAS;IAAAG,SAAA,GAXRrB,YAAY;EAAA;EAAA,QAAAsB,EAAA,G;eACb,CACTnB,aAAa,EACb;MACEoB,OAAO,EAAE5B,eAAe;MACxB6B,UAAU,EAAElB,cAAc;MAC1BmB,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,CAACvB,aAAa;KACrB,CACF;IAAAwB,OAAA,GAlBS/B,aAAa,EAAEE,gBAAgB,EAAEC,YAAY,EAACE,YAAY,EAAEJ,uBAAuB,EAC3FO,SAAS,CAACwB,OAAO,CAAC;MAChBC,MAAM,EAAE;QACNd,WAAW,EAAEA,WAAW;QACxBV,cAAc,EAAEA,cAAc;QAC9ByB,gBAAgB,EAAE;;KAErB,CAAC;EAAA;;;2EAaOZ,SAAS;IAAAa,YAAA,GArBL/B,YAAY;IAAA2B,OAAA,GACjB/B,aAAa,EAAEE,gBAAgB,EAAEC,YAAY,EAACE,YAAY,EAAEJ,uBAAuB,EAAAmC,EAAA,CAAA5B,SAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}