{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class TruckDetailService {\n  constructor(injector, http) {\n    this.injector = injector;\n    this.http = http;\n  }\n  createTruck(data) {\n    return this.http.post(environment.url + 'Master/SaveTruck/', data, {\n      reportProgress: true\n    });\n  }\n  getTruckTypes(active) {\n    const params = active ? {\n      active\n    } : {}; // If active is provided, use it as a query param\n    return this.http.get(`${environment.url}Master/GetTruckTypeList`, {\n      params\n    });\n  }\n  getTransporterNames() {\n    return this.http.get(environment.url + 'Master/GetTransporterList');\n  }\n  getTruckId(id) {\n    return this.http.get(environment.url + 'Master/GetTruckId/?id=' + id);\n  }\n  updateTruck(data) {\n    return this.http.put(environment.url + 'Master/UpdateTruck/', data, {\n      reportProgress: true\n    });\n  }\n  static #_ = this.ɵfac = function TruckDetailService_Factory(t) {\n    return new (t || TruckDetailService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TruckDetailService,\n    factory: TruckDetailService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","httpOptions","headers","TruckDetailService","constructor","injector","http","createTruck","data","post","url","reportProgress","getTruckTypes","active","params","get","getTransporterNames","getTruckId","id","updateTruck","put","_","i0","ɵɵinject","Injector","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\PES\\RGL_Gate\\TMS_Web\\src\\app\\master\\components\\truck-detail\\truck-detail.service.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst httpOptions={\r\n  headers:new HttpHeaders({'Content-Type':'application/json'}),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TruckDetailService {\r\n\r\n  constructor(private injector:Injector,private http:HttpClient) { }\r\n\r\n  createTruck(data:any){\r\n    return this.http.post<any>(environment.url+'Master/SaveTruck/',data,{\r\n      reportProgress:true,\r\n    });\r\n  }\r\n\r\n  getTruckTypes(active?: string): Observable<any[]> {\r\n    const params = active ? { active } : {}; // If active is provided, use it as a query param\r\n    return this.http.get<any[]>(`${environment.url}Master/GetTruckTypeList`, { params });\r\n  }\r\n\r\n  getTransporterNames():Observable<any[]>{\r\n    return this.http.get<any[]>(environment.url+'Master/GetTransporterList');\r\n  }\r\n\r\n  getTruckId(id:any){\r\n    return this.http.get<any>(environment.url+'Master/GetTruckId/?id='+id);\r\n  }\r\n\r\n  updateTruck(data:any){\r\n    return this.http.put<any>(environment.url+'Master/UpdateTruck/',data,{\r\n      reportProgress:true,\r\n    });\r\n  }  \r\n}\r\n"],"mappings":"AACA,SAAoBA,WAAW,QAAQ,sBAAsB;AAE7D,SAASC,WAAW,QAAQ,8BAA8B;;;AAE1D,MAAMC,WAAW,GAAC;EAChBC,OAAO,EAAC,IAAIH,WAAW,CAAC;IAAC,cAAc,EAAC;EAAkB,CAAC;CAC5D;AAKD,OAAM,MAAOI,kBAAkB;EAE7BC,YAAoBC,QAAiB,EAASC,IAAe;IAAzC,KAAAD,QAAQ,GAARA,QAAQ;IAAkB,KAAAC,IAAI,GAAJA,IAAI;EAAe;EAEjEC,WAAWA,CAACC,IAAQ;IAClB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAMT,WAAW,CAACU,GAAG,GAAC,mBAAmB,EAACF,IAAI,EAAC;MAClEG,cAAc,EAAC;KAChB,CAAC;EACJ;EAEAC,aAAaA,CAACC,MAAe;IAC3B,MAAMC,MAAM,GAAGD,MAAM,GAAG;MAAEA;IAAM,CAAE,GAAG,EAAE,CAAC,CAAC;IACzC,OAAO,IAAI,CAACP,IAAI,CAACS,GAAG,CAAQ,GAAGf,WAAW,CAACU,GAAG,yBAAyB,EAAE;MAAEI;IAAM,CAAE,CAAC;EACtF;EAEAE,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACV,IAAI,CAACS,GAAG,CAAQf,WAAW,CAACU,GAAG,GAAC,2BAA2B,CAAC;EAC1E;EAEAO,UAAUA,CAACC,EAAM;IACf,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAMf,WAAW,CAACU,GAAG,GAAC,wBAAwB,GAACQ,EAAE,CAAC;EACxE;EAEAC,WAAWA,CAACX,IAAQ;IAClB,OAAO,IAAI,CAACF,IAAI,CAACc,GAAG,CAAMpB,WAAW,CAACU,GAAG,GAAC,qBAAqB,EAACF,IAAI,EAAC;MACnEG,cAAc,EAAC;KAChB,CAAC;EACJ;EAAC,QAAAU,CAAA,G;qBA3BUlB,kBAAkB,EAAAmB,EAAA,CAAAC,QAAA,CAAAD,EAAA,CAAAE,QAAA,GAAAF,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBxB,kBAAkB;IAAAyB,OAAA,EAAlBzB,kBAAkB,CAAA0B,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}